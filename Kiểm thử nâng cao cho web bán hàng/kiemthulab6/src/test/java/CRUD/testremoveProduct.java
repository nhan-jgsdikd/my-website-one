package CRUD;

import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.time.Duration;
import static org.junit.Assert.*;

public class testremoveProduct {

    final String PRODUCT_NAME = "iPhone 15 Pro Max Updated";

    @Test
    public void testRemoveProduct() {
        System.setProperty("webdriver.chrome.driver", "C:\\chromedriver-win64\\chromedriver.exe");
        WebDriver driver = new ChromeDriver();
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));

        try {
            System.out.println("üîÑ B·∫Øt ƒë·∫ßu ki·ªÉm th·ª≠ x√≥a s·∫£n ph·∫©m...");

            // B∆∞·ªõc 2: ƒêi ƒë·∫øn trang qu·∫£n l√Ω s·∫£n ph·∫©m
            System.out.println("‚û°Ô∏è ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang qu·∫£n l√Ω s·∫£n ph·∫©m...");
            driver.get("http://localhost:8080/adminproducts");
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".admin-container")));

            // B∆∞·ªõc 3: T√¨m v√† x√°c nh·∫≠n x√≥a
            WebElement deleteButton = null;
            try {
                System.out.println("üîç T√¨m s·∫£n ph·∫©m c·∫ßn x√≥a: " + PRODUCT_NAME);
                deleteButton = findDeleteButton(driver, wait);
            } catch (NoSuchElementException e) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m: " + PRODUCT_NAME);
            }

            if (deleteButton != null) {
                System.out.println("üñ±Ô∏è Nh·∫•n v√†o n√∫t x√≥a...");
                ((JavascriptExecutor) driver).executeScript("arguments[0].click();", deleteButton);

                // X·ª≠ l√Ω confirm dialog
                System.out.println("‚ö†Ô∏è Hi·ªÉn th·ªã h·ªôp tho·∫°i x√°c nh·∫≠n x√≥a...");
                WebDriverWait alertWait = new WebDriverWait(driver, Duration.ofSeconds(5));
                Alert alert = alertWait.until(ExpectedConditions.alertIsPresent());
                alert.accept();
                System.out.println("‚úÖ ƒê√£ x√°c nh·∫≠n x√≥a!");

                // B∆∞·ªõc 4: Verify x√≥a th√†nh c√¥ng
                verifyDeletion(driver, wait);
            } else {
                System.out.println("‚è≠Ô∏è B·ªè qua ki·ªÉm th·ª≠ v√¨ kh√¥ng c√≥ s·∫£n ph·∫©m ƒë·ªÉ x√≥a.");
            }

        } catch (Exception e) {
            handleError(e);
        } finally {
            driver.quit();
            System.out.println("üîö Ki·ªÉm th·ª≠ k·∫øt th√∫c.");
        }
    }

    private WebElement findDeleteButton(WebDriver driver, WebDriverWait wait) {
        System.out.println("‚è≥ Ch·ªù danh s√°ch s·∫£n ph·∫©m hi·ªÉn th·ªã...");
        wait.until(d -> !driver.findElements(By.cssSelector(".admin-card")).isEmpty());

        return driver.findElements(By.cssSelector(".admin-card")).stream()
            .filter(card -> {
                try {
                    String title = card.findElement(By.cssSelector(".card-title")).getText();
                    System.out.println("üìå T√¨m th·∫•y s·∫£n ph·∫©m: " + title);
                    return title.equals(PRODUCT_NAME);
                } catch (StaleElementReferenceException e) {
                    return false;
                }
            })
            .findFirst()
            .map(card -> {
                scrollToElement(driver, card);
                System.out.println("üóëÔ∏è X√°c ƒë·ªãnh n√∫t x√≥a cho s·∫£n ph·∫©m...");
                return card.findElement(By.xpath(".//button[contains(.,'X√≥a')]"));
            })
            .orElseThrow(() -> new NoSuchElementException("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m c·∫ßn x√≥a"));
    }

    private void verifyDeletion(WebDriver driver, WebDriverWait wait) {
        System.out.println("‚è≥ Ch·ªù s·∫£n ph·∫©m bi·∫øn m·∫•t kh·ªèi danh s√°ch...");
        wait.until(ExpectedConditions.invisibilityOfElementWithText(
            By.cssSelector(".card-title"), PRODUCT_NAME
        ));

        System.out.println("üîÑ L√†m m·ªõi trang ƒë·ªÉ ki·ªÉm tra l·∫°i...");
        driver.navigate().refresh();
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".admin-container")));

        boolean productExists = driver.findElements(By.xpath("//h5[contains(.,'" + PRODUCT_NAME + "')]")).isEmpty();
        if (productExists) {
            System.out.println("‚úÖ S·∫£n ph·∫©m ƒë√£ b·ªã x√≥a th√†nh c√¥ng!");
        } else {
            System.out.println("‚ùå S·∫£n ph·∫©m v·∫´n t·ªìn t·∫°i sau khi x√≥a!");
        }
        assertTrue("S·∫£n ph·∫©m v·∫´n t·ªìn t·∫°i", productExists);
    }

    private void scrollToElement(WebDriver driver, WebElement element) {
        System.out.println("üîΩ Cu·ªôn ƒë·∫øn s·∫£n ph·∫©m trong danh s√°ch...");
        ((JavascriptExecutor) driver).executeScript(
            "arguments[0].scrollIntoView({behavior: 'instant', block: 'center', inline: 'center'});", 
            element
        );
    }

    private void handleError(Exception e) {
        System.err.println("‚ùå L·ªói: " + e.getMessage());
        e.printStackTrace();
        fail("Test th·∫•t b·∫°i: " + e.getMessage());
    }
}
